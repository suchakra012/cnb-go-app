# CICD using GitHub actions

name: CI/CD

# Exclude the workflow to run on changes to the helm chart
on:
  push:
    branches:
      - main
    paths-ignore:
      - 'helm/**'
      - 'k8s/**'
      - 'README.md'
jobs:
  local_build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Go 1.22
      uses: actions/setup-go@v2
      with:
        go-version: 1.22   

    - name: Build
      run: go build -o cnb-go-app

    - name: Test
      run: go test ./...

  code_scan:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    - name: Run Trivy vulnerability scanner in repo mode
      uses: aquasecurity/trivy-action@0.20.0
      with:
        scan-type: 'fs'
        ignore-unfixed: true
        format: 'sarif'
        output: 'trivy-results.sarif'
        severity: 'CRITICAL'

    - name: Upload Trivy scan results to GitHub Security tab
      uses: github/codeql-action/upload-sarif@v2
      with:
        sarif_file: 'trivy-results.sarif'
     
  code_quality:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

  #Check the Sonarqube run 
    - name: SonarQube Scan
      uses: sonarsource/sonarqube-scan-action@master
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
    
  #Check Quality gate result from previous Sonarqube run
    - name: SonarQube Quality Gate check
      id: sonarqube-quality-gate-check
      uses: sonarsource/sonarqube-quality-gate-action@master
      # Force to fail step after specific time.
      timeout-minutes: 5
      env:
       SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
       SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}

    - name: "Example show SonarQube Quality Gate Status value"
      run: echo "The Quality Gate status is ${{ steps.sonarqube-quality-gate-check.outputs.quality-gate-status }}"

  image_build_scan:
    runs-on: ubuntu-latest
    needs: code_scan
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      - name: Install Pack CLI
        uses: buildpacks/github-actions/setup-pack@v5.0.0
      - name: login
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Pack Remote Build & push to Registry
        run: |
          pack build ${{ secrets.DOCKERHUB_USERNAME }}/cnb-go-app:${{github.run_id}} --buildpack paketo-buildpacks/go --builder paketobuildpacks/builder-jammy-base --publish
      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@0.20.0
        with:
          image-ref: 'docker.io/${{ secrets.DOCKERHUB_USERNAME }}/cnb-go-app:${{github.run_id}}'
          format: 'table'
          exit-code: '1'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'

  update_newtag_in_helm_chart:
    runs-on: ubuntu-latest
    needs: image_build_scan
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GH_TOKEN }}              
                 
    - name: Update tag in Helm chart
      run: |
        sed -i 's/tag: .*/tag: "${{github.run_id}}"/' helm/cnb-go-app-chart/values.yaml

    - name: Commit and push changes
      run: |
        git config --global user.email "suchakra012@hotmail.com"
        git config --global user.name "Suman Chakraborty"
        git add helm/cnb-go-app-chart/values.yaml
        git commit -m "Update tag in Helm chart"
        git push
          
  
     
    

        
  
